webpackHotUpdate("main",{

/***/ "./EditableSpan.tsx":
/*!**************************!*\
  !*** ./EditableSpan.tsx ***!
  \**************************/
/*! exports provided: EditableSpan */
/*! exports used: EditableSpan */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditableSpan; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "../node_modules/react/jsx-runtime.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }



var EditableSpan = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(function (props) {
  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false),
      _useState2 = _slicedToArray(_useState, 2),
      editMode = _useState2[0],
      setEditMode = _useState2[1];

  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(""),
      _useState4 = _slicedToArray(_useState3, 2),
      title = _useState4[0],
      setTitle = _useState4[1];

  var activateEditMode = function () {
    setEditMode(true);
    setTitle(props.title);
  };

  var activateViewMode = function () {
    setEditMode(false);
    props.onChange(title, props.taskID);
  };

  var onchangeTitleHandler = function (e) {
    return setTitle(e.currentTarget.value);
  };

  return editMode ? /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__["jsx"])("input", {
    value: title,
    onChange: onchangeTitleHandler,
    onBlur: activateViewMode,
    autoFocus: true
  }) : /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__["jsx"])("span", {
    onDoubleClick: activateEditMode,
    children: props.title
  });
});

/***/ }),

/***/ "./Todolist.tsx":
/*!**********************!*\
  !*** ./Todolist.tsx ***!
  \**********************/
/*! exports provided: Todolist, Task */
/*! exports used: Task */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export Todolist */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Task; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Todolist_module_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Todolist.module.css */ "./Todolist.module.css");
/* harmony import */ var _Todolist_module_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Todolist_module_css__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _AddItemForm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AddItemForm */ "./AddItemForm.tsx");
/* harmony import */ var _EditableSpan__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EditableSpan */ "./EditableSpan.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "../node_modules/react-redux/es/index.js");
/* harmony import */ var _state_todolists_reducer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./state/todolists-reducer */ "./state/todolists-reducer.ts");
/* harmony import */ var _state_tasks_reducer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./state/tasks-reducer */ "./state/tasks-reducer.ts");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react/jsx-runtime */ "../node_modules/react/jsx-runtime.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__);









var Todolist = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(function (props) {
  var dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_4__[/* useDispatch */ "a"])();
  var tasks = Object(react_redux__WEBPACK_IMPORTED_MODULE_4__[/* useSelector */ "b"])(function (state) {
    return state.tasks[props.todoListId];
  });
  var onAllClickHandler = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(function (value, todoLisId) {
    var action = Object(_state_todolists_reducer__WEBPACK_IMPORTED_MODULE_5__[/* changeTodolistFilterAC */ "a"])(value, todoLisId);
    dispatch(action);
  }, [props.filter, props.todoListId]);
  var removeTodoList = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(function () {
    var action = Object(_state_todolists_reducer__WEBPACK_IMPORTED_MODULE_5__[/* removeTodolistAC */ "c"])(props.todoListId);
    dispatch(action);
  }, [dispatch]);
  var changeTodoListTitle = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(function (newTitle) {
    var action = Object(_state_todolists_reducer__WEBPACK_IMPORTED_MODULE_5__[/* changeTodolistTitleAC */ "b"])(newTitle, props.todoListId);
    dispatch(action);
  }, [dispatch, props.todoListId]);
  var addTask = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(function (title) {
    var action = Object(_state_tasks_reducer__WEBPACK_IMPORTED_MODULE_6__[/* addTaskAC */ "a"])(title, props.todoListId);
    dispatch(action);
  }, [props.todoListId]);
  var onChangeTitleHandler = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(function (newTitle, taskID) {
    var action = Object(_state_tasks_reducer__WEBPACK_IMPORTED_MODULE_6__[/* changeTaskTitleStatusAC */ "c"])(taskID, props.todoListId, newTitle);
    dispatch(action);
  }, [dispatch]);
  var checkBoxHandler = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(function (id, todoLisId, e) {
    var action = Object(_state_tasks_reducer__WEBPACK_IMPORTED_MODULE_6__[/* changeTaskStatusAC */ "b"])(id, todoLisId, e.currentTarget.checked);
    dispatch(action);
  }, [dispatch]);
  var onRemoveHandler = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(function (id, todoLisId) {
    var action = Object(_state_tasks_reducer__WEBPACK_IMPORTED_MODULE_6__[/* removeTaskAC */ "d"])(id, todoLisId);
    dispatch(action);
  }, [dispatch]);
  var tasksForTodolist = tasks;

  if (props.filter === "completed") {
    tasksForTodolist = tasksForTodolist.filter(function (t) {
      return t.isDone === true;
    });
  }

  if (props.filter === "active") {
    tasksForTodolist = tasksForTodolist.filter(function (t) {
      return !t.isDone;
    });
  }

  return /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__["jsxs"])("div", {
    children: [/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__["jsxs"])("h3", {
      children: [/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__["jsx"])(_EditableSpan__WEBPACK_IMPORTED_MODULE_3__[/* EditableSpan */ "a"], {
        taskID: props.todoListId,
        title: props.title,
        onChange: changeTodoListTitle
      }), /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__["jsx"])("button", {
        onClick: removeTodoList,
        children: "X"
      })]
    }), /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__["jsx"])(_AddItemForm__WEBPACK_IMPORTED_MODULE_2__[/* AddItemForm */ "a"], {
      addItem: addTask
    }), /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__["jsx"])("ul", {
      children: tasksForTodolist.map(function (t) {
        return /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__["jsx"])(Task, {
          task: t,
          todoListId: props.todoListId,
          checkBoxHandler: checkBoxHandler,
          onChangeTitleHandler: onChangeTitleHandler,
          onRemoveHandler: onRemoveHandler
        }, t.id);
      })
    }), /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__["jsxs"])("div", {
      children: [/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__["jsx"])("button", {
        className: props.filter === "all" ? _Todolist_module_css__WEBPACK_IMPORTED_MODULE_1___default.a.activeFilter : "",
        onClick: function () {
          onAllClickHandler("all", props.todoListId);
        },
        children: "All"
      }), /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__["jsx"])("button", {
        className: props.filter === "active" ? _Todolist_module_css__WEBPACK_IMPORTED_MODULE_1___default.a.activeFilter : "",
        onClick: function () {
          onAllClickHandler("active", props.todoListId);
        },
        children: "Active"
      }), /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__["jsx"])("button", {
        className: props.filter === "completed" ? _Todolist_module_css__WEBPACK_IMPORTED_MODULE_1___default.a.activeFilter : "",
        onClick: function () {
          onAllClickHandler("completed", props.todoListId);
        },
        children: "Completed"
      })]
    })]
  });
});
var Task = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(function (props) {
  return /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__["jsxs"])("li", {
    className: props.task.isDone ? _Todolist_module_css__WEBPACK_IMPORTED_MODULE_1___default.a.isDone : "",
    children: [/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__["jsx"])("input", {
      type: "checkbox",
      checked: props.task.isDone,
      onChange: function (e) {
        return props.checkBoxHandler(props.task.id, props.todoListId, e);
      }
    }), /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__["jsx"])(_EditableSpan__WEBPACK_IMPORTED_MODULE_3__[/* EditableSpan */ "a"], {
      title: props.task.title,
      onChange: props.onChangeTitleHandler,
      taskID: props.task.id
    }), /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__["jsx"])("button", {
      onClick: function () {
        return props.onRemoveHandler(props.task.id, props.todoListId);
      },
      children: "X"
    })]
  }, props.task.id);
});

/***/ }),

/***/ "./state/tasks-reducer.ts":
/*!********************************!*\
  !*** ./state/tasks-reducer.ts ***!
  \********************************/
/*! exports provided: tasksReducer, removeTaskAC, addTaskAC, changeTaskStatusAC, changeTaskTitleStatusAC */
/*! exports used: addTaskAC, changeTaskStatusAC, changeTaskTitleStatusAC, removeTaskAC */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export tasksReducer */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return removeTaskAC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addTaskAC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return changeTaskStatusAC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return changeTaskTitleStatusAC; });
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/index.js");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_0__);
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }


var initialState = {};
var tasksReducer = function () {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case "REMOVE-TASK":
      {
        var stateCopy = Object.assign({}, state);
        var tasks = state[action.todolistId];
        var filteredTasks = tasks.filter(function (t) {
          return t.id !== action.taskId;
        });
        stateCopy[action.todolistId] = filteredTasks;
        return stateCopy;
      }

    case "ADD-TASK":
      {
        var _stateCopy = Object.assign({}, state);

        var _tasks = _stateCopy[action.todolistId];
        var newTask = {
          id: Object(uuid__WEBPACK_IMPORTED_MODULE_0__["v1"])(),
          title: action.title,
          isDone: false
        };
        var newTasks = [newTask].concat(_toConsumableArray(_tasks));
        _stateCopy[action.todolistId] = newTasks;
        return _stateCopy;
      }

    case "CHANGE-TASK-STATUS":
      {
        var _stateCopy2 = Object.assign({}, state);

        var _tasks2 = _stateCopy2[action.todolistId];
        _stateCopy2[action.todolistId] = _tasks2.map(function (t) {
          return t.id === action.taskId ? Object.assign({}, t, {
            isDone: action.isDone
          }) : t;
        });
        return _stateCopy2;
      }

    case "CHANGE-TASK-TITLE":
      {
        var _stateCopy3 = Object.assign({}, state);

        var _tasks3 = _stateCopy3[action.todolistId];
        _stateCopy3[action.todolistId] = _tasks3.map(function (t) {
          return t.id === action.taskId ? Object.assign({}, t, {
            title: action.title
          }) : t;
        });
        return _stateCopy3;
      }

    case "ADD-TODOLIST":
      {
        var _stateCopy4 = Object.assign({}, state);

        _stateCopy4[action.todolistId] = [];
        return _stateCopy4;
      }

    case "REMOVE-TODOLIST":
      {
        var _stateCopy5 = Object.assign({}, state);

        delete _stateCopy5[action.id];
        return _stateCopy5;
      }

    default:
      return state;
    //throw new Error("Wrong action type")
  }
};
var removeTaskAC = function (taskId, todolistId) {
  return {
    type: "REMOVE-TASK",
    todolistId: todolistId,
    taskId: taskId
  };
};
var addTaskAC = function (title, todolistId) {
  return {
    type: "ADD-TASK",
    title: title,
    todolistId: todolistId
  };
};
var changeTaskStatusAC = function (taskId, todolistId, isDone) {
  return {
    type: "CHANGE-TASK-STATUS",
    taskId: taskId,
    todolistId: todolistId,
    isDone: isDone
  };
};
var changeTaskTitleStatusAC = function (taskId, todolistId, title) {
  return {
    type: "CHANGE-TASK-TITLE",
    taskId: taskId,
    todolistId: todolistId,
    title: title
  };
};

/***/ }),

/***/ "./state/todolists-reducer.ts":
/*!************************************!*\
  !*** ./state/todolists-reducer.ts ***!
  \************************************/
/*! exports provided: toDoListId1, toDoListId2, todolistsReducer, removeTodolistAC, addTodolistAC, changeTodolistTitleAC, changeTodolistFilterAC */
/*! exports used: changeTodolistFilterAC, changeTodolistTitleAC, removeTodolistAC */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export toDoListId1 */
/* unused harmony export toDoListId2 */
/* unused harmony export todolistsReducer */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return removeTodolistAC; });
/* unused harmony export addTodolistAC */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return changeTodolistTitleAC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return changeTodolistFilterAC; });
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/index.js");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_0__);
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }


var toDoListId1 = Object(uuid__WEBPACK_IMPORTED_MODULE_0__["v1"])();
var toDoListId2 = Object(uuid__WEBPACK_IMPORTED_MODULE_0__["v1"])();
var initialState = [];
var todolistsReducer = function () {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case "REMOVE-TODOLIST":
      {
        return state.filter(function (tl) {
          return tl.id != action.id;
        });
      }

    case "ADD-TODOLIST":
      {
        return [].concat(_toConsumableArray(state), [{
          id: action.todolistId,
          title: action.title,
          filter: "all"
        }]);
      }

    case "CHANGE-TODOLIST-TITLE":
      {
        var todolist = state.find(function (tl) {
          return tl.id === action.id;
        });

        if (todolist) {
          todolist.title = action.title;
        }

        return _toConsumableArray(state);
      }

    case "CHANGE-TODOLIST-FILTER":
      {
        var _todolist = state.find(function (tl) {
          return tl.id === action.id;
        });

        if (_todolist) {
          _todolist.filter = action.filter;
        }

        return _toConsumableArray(state);
      }

    default:
      return state;
    //throw new Error("Wrong action type")
  }
};
var removeTodolistAC = function (todolistId) {
  return {
    type: "REMOVE-TODOLIST",
    id: todolistId
  };
};
var addTodolistAC = function (title) {
  return {
    type: "ADD-TODOLIST",
    title: title,
    todolistId: Object(uuid__WEBPACK_IMPORTED_MODULE_0__["v1"])()
  };
};
var changeTodolistTitleAC = function (title, id) {
  return {
    type: "CHANGE-TODOLIST-TITLE",
    title: title,
    id: id
  };
};
var changeTodolistFilterAC = function (filter, id) {
  return {
    type: "CHANGE-TODOLIST-FILTER",
    filter: filter,
    id: id
  };
};

/***/ }),

/***/ "./stories/Task.stories.tsx":
/*!**********************************!*\
  !*** ./stories/Task.stories.tsx ***!
  \**********************************/
/*! exports provided: default, TaskBaseExample */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaskBaseExample", function() { return TaskBaseExample; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @storybook/addon-actions */ "./node_modules/@storybook/addon-actions/dist/esm/index.js");
/* harmony import */ var _Todolist__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Todolist */ "./Todolist.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "../node_modules/react/jsx-runtime.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__);
/* eslint-disable */
// @ts-nocheck
// @ts-ignore
var __STORY__ = "import React from \"react\";\r\nimport {action} from \"@storybook/addon-actions\";\r\nimport {Task} from \"../Todolist\";\r\n\r\n\r\nexport default {\r\n    title: \"Task Component\",\r\n    component: Task\r\n}\r\n\r\nconst checkBoxHandlerCallback = action(\"Status changed\")\r\nconst onChangeTitleHandlerCallback = action(\"Title changed\")\r\nconst onRemoveHandlerCallback = action(\"Task removed\")\r\n\r\nexport const TaskBaseExample = () => {\r\n    return <>\r\n        <Task\r\n            task={{id: \"1\", isDone: true, title: \"CSS\"}}\r\n            todoListId={\"todoListId1\"}\r\n            checkBoxHandler={checkBoxHandlerCallback}\r\n            onChangeTitleHandler={onChangeTitleHandlerCallback}\r\n            onRemoveHandler={onRemoveHandlerCallback}\r\n        />\r\n        <Task\r\n            task={{id: \"2\", isDone: false, title: \"JS\"}}\r\n            todoListId={\"todoListId2\"}\r\n            checkBoxHandler={checkBoxHandlerCallback}\r\n            onChangeTitleHandler={onChangeTitleHandlerCallback}\r\n            onRemoveHandler={onRemoveHandlerCallback}\r\n        />\r\n    </>\r\n}"; // @ts-ignore

var __LOCATIONS_MAP__ = {
  "TaskBaseExample": {
    "startLoc": {
      "col": 31,
      "line": 15
    },
    "endLoc": {
      "col": 1,
      "line": 32
    },
    "startBody": {
      "col": 31,
      "line": 15
    },
    "endBody": {
      "col": 1,
      "line": 32
    }
  }
};






/* harmony default export */ __webpack_exports__["default"] = ({
  title: "Task Component",
  component: _Todolist__WEBPACK_IMPORTED_MODULE_2__[/* Task */ "a"]
});
var checkBoxHandlerCallback = Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__["action"])("Status changed");
var onChangeTitleHandlerCallback = Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__["action"])("Title changed");
var onRemoveHandlerCallback = Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__["action"])("Task removed");
var TaskBaseExample = function () {
  return /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__["jsxs"])(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__["Fragment"], {
    children: [/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__["jsx"])(_Todolist__WEBPACK_IMPORTED_MODULE_2__[/* Task */ "a"], {
      task: {
        id: "1",
        isDone: true,
        title: "CSS"
      },
      todoListId: "todoListId1",
      checkBoxHandler: checkBoxHandlerCallback,
      onChangeTitleHandler: onChangeTitleHandlerCallback,
      onRemoveHandler: onRemoveHandlerCallback
    }), /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__["jsx"])(_Todolist__WEBPACK_IMPORTED_MODULE_2__[/* Task */ "a"], {
      task: {
        id: "2",
        isDone: false,
        title: "JS"
      },
      todoListId: "todoListId2",
      checkBoxHandler: checkBoxHandlerCallback,
      onChangeTitleHandler: onChangeTitleHandlerCallback,
      onRemoveHandler: onRemoveHandlerCallback
    })]
  });
};
TaskBaseExample.parameters = Object.assign({
  storySource: {
    source: "() => {\r\n    return <>\r\n        <Task\r\n            task={{id: \"1\", isDone: true, title: \"CSS\"}}\r\n            todoListId={\"todoListId1\"}\r\n            checkBoxHandler={checkBoxHandlerCallback}\r\n            onChangeTitleHandler={onChangeTitleHandlerCallback}\r\n            onRemoveHandler={onRemoveHandlerCallback}\r\n        />\r\n        <Task\r\n            task={{id: \"2\", isDone: false, title: \"JS\"}}\r\n            todoListId={\"todoListId2\"}\r\n            checkBoxHandler={checkBoxHandlerCallback}\r\n            onChangeTitleHandler={onChangeTitleHandlerCallback}\r\n            onRemoveHandler={onRemoveHandlerCallback}\r\n        />\r\n    </>\r\n}"
  }
}, TaskBaseExample.parameters);

/***/ })

})
//# sourceMappingURL=main.7b124ab1d364d406d276.hot-update.js.map