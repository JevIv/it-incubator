{"version":3,"file":"main.de66947e63f8e5cdc5bd.hot-update.js","sources":["webpack:///./App.css?fe60","webpack:///./AppWithRedux.tsx","webpack:///./Todolist.tsx","webpack:///./App.css","webpack:///./state/todolists-reducer.ts","webpack:///./stories/AppWithRedux.stories.tsx","webpack:///./stories/Task.stories.tsx"],"sourcesContent":["var api = require(\"!./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!./node_modules/css-loader/dist/cjs.js??ref--11-1!./node_modules/postcss-loader/dist/cjs.js??ref--11-2!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!./node_modules/css-loader/dist/cjs.js??ref--11-1!./node_modules/postcss-loader/dist/cjs.js??ref--11-2!./App.css\",\n      function () {\n        content = require(\"!!./node_modules/css-loader/dist/cjs.js??ref--11-1!./node_modules/postcss-loader/dist/cjs.js??ref--11-2!./App.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","import React, {useCallback} from 'react';\nimport './App.css';\nimport {TaskType, Todolist} from \"./Todolist\";\nimport {AddItemForm} from \"./AddItemForm\";\nimport {addTodolistAC} from \"../../todolist_dymich/src/state/todolists-reducer\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootState} from \"./state/store\";\n\nexport type FilterValuesType = \"all\" | \"completed\" | \"active\";\nexport type TodolistType = {\n    id: string,\n    title: string,\n    filter: FilterValuesType\n}\nexport type TasksStateType = {\n    [key: string]: Array<TaskType>\n}\n\nfunction AppWithRedux() {\n\n    const dispatch = useDispatch();\n    const todolists = useSelector<AppRootState, Array<TodolistType>>(state => state.todolists)\n    //const tasks = useSelector<AppRootState, TasksStateType>(state => state.tasks)\n\n\n    const addTodolist = useCallback((title: string) => {\n        const action = addTodolistAC(title);\n        dispatch(action);\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <AddItemForm addItem={addTodolist} />\n            {\n                todolists.map((tl) => {\n                    return (\n                        <Todolist key={tl.id}\n                                  todoListId={tl.id}\n                                  title={tl.title}\n                                  filter={tl.filter}\n                    />\n                    )\n                })\n            }\n        </div>\n    );\n}\n\nexport default AppWithRedux;\n","import React, {ChangeEvent, useCallback} from \"react\";\r\nimport {FilterValuesType} from \"./AppWithRedux\";\r\nimport s from \"./Todolist.module.css\"\r\nimport {AddItemForm} from \"./AddItemForm\";\r\nimport {EditableSpan} from \"./EditableSpan\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootState} from \"./state/store\";\r\nimport {changeTodolistFilterAC, changeTodolistTitleAC, removeTodolistAC} from \"./state/todolists-reducer\";\r\nimport {addTaskAC, changeTaskStatusAC, changeTaskTitleStatusAC, removeTaskAC} from \"./state/tasks-reducer\";\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    todoListId: string\r\n    title: string\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport const Todolist = React.memo((props: PropsType) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const tasks = useSelector<AppRootState, TaskType[]>(state => state.tasks[props.todoListId])\r\n\r\n    const onAllClickHandler = useCallback((value: FilterValuesType, todoLisId: string) => {\r\n        const action = changeTodolistFilterAC(value, todoLisId)\r\n        dispatch(action)\r\n    }, [props.filter, props.todoListId]);\r\n\r\n    const removeTodoList = useCallback(() => {\r\n        const action = removeTodolistAC(props.todoListId)\r\n        dispatch(action)\r\n    }, [dispatch]);\r\n\r\n    const changeTodoListTitle = useCallback((newTitle: string) => {\r\n        const action = changeTodolistTitleAC(newTitle, props.todoListId);\r\n        dispatch(action)\r\n    }, [dispatch, props.todoListId]);\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        const action = addTaskAC(title, props.todoListId);\r\n        dispatch(action)\r\n    }, [props.todoListId]);\r\n\r\n    const onChangeTitleHandler = useCallback((newTitle: string, taskID: string) => {\r\n        const action = changeTaskTitleStatusAC(taskID, props.todoListId, newTitle);\r\n        dispatch(action)\r\n    }, [dispatch]);\r\n\r\n    const checkBoxHandler = useCallback((id: string, todoLisId: string, e: ChangeEvent<HTMLInputElement>) => {\r\n        const action = changeTaskStatusAC(id, todoLisId, e.currentTarget.checked)\r\n        dispatch(action)\r\n    }, [dispatch]);\r\n\r\n    const onRemoveHandler = useCallback((id: string, todoLisId: string) => {\r\n        const action = removeTaskAC(id, todoLisId)\r\n        dispatch(action)\r\n    }, [dispatch]);\r\n\r\n    let tasksForTodolist = tasks;\r\n    if (props.filter === \"completed\") {\r\n        tasksForTodolist = tasksForTodolist.filter(t => t.isDone === true);\r\n    }\r\n    if (props.filter === \"active\") {\r\n        tasksForTodolist = tasksForTodolist.filter(t => !t.isDone);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>\r\n                <EditableSpan taskID={props.todoListId} title={props.title} onChange={changeTodoListTitle}/>\r\n                <button onClick={removeTodoList}>X</button>\r\n            </h3>\r\n            <AddItemForm addItem={addTask}/>\r\n            <ul>\r\n                {\r\n                    tasksForTodolist.map(t => <Task\r\n                        key={t.id}\r\n                        task={t}\r\n                        todoListId={props.todoListId}\r\n                        checkBoxHandler={checkBoxHandler}\r\n                        onChangeTitleHandler={onChangeTitleHandler}\r\n                        onRemoveHandler={onRemoveHandler}\r\n                    />)\r\n                }\r\n            </ul>\r\n            <div>\r\n                <button className={props.filter === \"all\" ? s.activeFilter : \"\"}\r\n                        onClick={() => {\r\n                            onAllClickHandler(\"all\", props.todoListId)\r\n                        }}>All\r\n                </button>\r\n                <button className={props.filter === \"active\" ? s.activeFilter : \"\"}\r\n                        onClick={() => {\r\n                            onAllClickHandler(\"active\", props.todoListId)\r\n                        }}>Active\r\n                </button>\r\n                <button className={props.filter === \"completed\" ? s.activeFilter : \"\"}\r\n                        onClick={() => {\r\n                            onAllClickHandler(\"completed\", props.todoListId)\r\n                        }}>Completed\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todoListId: string\r\n    checkBoxHandler: (id: string, todoListId: string, e: ChangeEvent<HTMLInputElement>) => void\r\n    onChangeTitleHandler: (newTitle: string, taskID: string) => void\r\n    onRemoveHandler: (id: string, todoListId: string) => void\r\n\r\n}\r\n\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    return (\r\n        <li key={props.task.id} className={props.task.isDone ? s.isDone : \"\"}>\r\n            <input type=\"checkbox\"\r\n                   checked={props.task.isDone}\r\n                   onChange={(e) => props.checkBoxHandler(props.task.id, props.todoListId, e)}/>\r\n            <EditableSpan title={props.task.title}\r\n                          onChange={props.onChangeTitleHandler}\r\n                          taskID={props.task.id}/>\r\n            <button onClick={() =>\r\n                props.onRemoveHandler(props.task.id, props.todoListId)}>X\r\n            </button>\r\n        </li>\r\n    )\r\n});\r\n\r\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".App {\\n  padding: 30px;\\n  display: flex;\\n}\\n\\n.App > div {\\n  margin-right: 50px\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import {FilterValuesType, TodolistType} from \"../AppWithRedux\";\r\nimport {v1} from \"uuid\";\r\n\r\nexport type RemoveTodolistActionType = {\r\n    type: \"REMOVE-TODOLIST\"\r\n    id: string\r\n}\r\nexport type AddTodolistActionType = {\r\n    type: \"ADD-TODOLIST\"\r\n    title: string\r\n    todolistId: string\r\n}\r\nexport type ChangeTodolistActionType = {\r\n    type: \"CHANGE-TODOLIST-TITLE\"\r\n    id: string\r\n    title: string\r\n}\r\nexport type ChangeTodolistFilterActionType = {\r\n    type: \"CHANGE-TODOLIST-FILTER\"\r\n    id: string\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport type ActionsType =\r\n    RemoveTodolistActionType |\r\n    AddTodolistActionType | ChangeTodolistActionType |\r\n    ChangeTodolistFilterActionType\r\n\r\nexport let toDoListId1 = v1();\r\nexport let toDoListId2 = v1();\r\n\r\nlet initialState: Array<TodolistType> = [];\r\n\r\nexport const todolistsReducer = (state= initialState,\r\n                                 action:ActionsType): Array<TodolistType> => {\r\n    switch (action.type) {\r\n        case \"REMOVE-TODOLIST\": {\r\n            return state.filter(tl => tl.id != action.id)\r\n        }\r\n        case \"ADD-TODOLIST\": {\r\n            return  [...state, {\r\n                id: action.todolistId,\r\n                title:action.title,\r\n                filter: \"all\"\r\n            }]\r\n        }\r\n        case \"CHANGE-TODOLIST-TITLE\": {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                todolist.title = action.title;\r\n            }\r\n            return [...state]\r\n        }\r\n        case \"CHANGE-TODOLIST-FILTER\": {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                todolist.filter = action.filter;\r\n            }\r\n            return [...state]\r\n        }\r\n\r\n\r\n        default:\r\n            return state\r\n            //throw new Error(\"Wrong action type\")\r\n\r\n    }\r\n}\r\n\r\nexport const removeTodolistAC = (todolistId: string): RemoveTodolistActionType => {\r\n    return {type: \"REMOVE-TODOLIST\", id: todolistId}\r\n}\r\nexport const addTodolistAC = (title: string): AddTodolistActionType => {\r\n    return {type: \"ADD-TODOLIST\", title: title, todolistId: v1()}\r\n}\r\nexport const changeTodolistTitleAC = (title: string, id: string): ChangeTodolistActionType => {\r\n    return {type: \"CHANGE-TODOLIST-TITLE\", title: title, id:id}\r\n}\r\nexport const changeTodolistFilterAC = (filter: FilterValuesType, id: string): ChangeTodolistFilterActionType => {\r\n    return {type: \"CHANGE-TODOLIST-FILTER\", filter: filter, id:id}\r\n}","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport {action} from \\\"@storybook/addon-actions\\\";\\nimport AppWithRedux from \\\"../AppWithRedux\\\";\\n\\nexport default {\\n    title: \\\"AppWithRedux Component\\\",\\n    component: AppWithRedux,\\n}\\n\\n\\nexport const AppWithReduxBaseExample = () => {\\n    return <AppWithRedux />\\n}\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"AppWithReduxBaseExample\":{\"startLoc\":{\"col\":39,\"line\":11},\"endLoc\":{\"col\":1,\"line\":13},\"startBody\":{\"col\":39,\"line\":11},\"endBody\":{\"col\":1,\"line\":13}}};\n    \nimport React from \"react\";\nimport {action} from \"@storybook/addon-actions\";\nimport AppWithRedux from \"../AppWithRedux\";\n\nexport default {\n    title: \"AppWithRedux Component\",\n    component: AppWithRedux,\n}\n\n\nexport const AppWithReduxBaseExample = () => {\n    return <AppWithRedux />\n};\n\n\nAppWithReduxBaseExample.parameters = { storySource: { source: \"() => {\\n    return <AppWithRedux />\\n}\" }, ...AppWithReduxBaseExample.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\r\\nimport {action} from \\\"@storybook/addon-actions\\\";\\r\\nimport {Task} from \\\"../Todolist\\\";\\r\\n\\r\\n\\r\\nexport default {\\r\\n    title: \\\"Task Component\\\",\\r\\n    component: Task\\r\\n}\\r\\n\\r\\nconst checkBoxHandlerCallback = action(\\\"Status changed\\\")\\r\\nconst onChangeTitleHandlerCallback = action(\\\"Title changed\\\")\\r\\nconst onRemoveHandlerCallback = action(\\\"Task removed\\\")\\r\\n\\r\\nexport const TaskBaseExample = () => {\\r\\n    return <>\\r\\n        <Task\\r\\n            task={{id: \\\"1\\\", isDone: true, title: \\\"CSS\\\"}}\\r\\n            todoListId={\\\"todoListId1\\\"}\\r\\n            checkBoxHandler={checkBoxHandlerCallback}\\r\\n            onChangeTitleHandler={onChangeTitleHandlerCallback}\\r\\n            onRemoveHandler={onRemoveHandlerCallback}\\r\\n        />\\r\\n        <Task\\r\\n            task={{id: \\\"2\\\", isDone: false, title: \\\"JS\\\"}}\\r\\n            todoListId={\\\"todoListId2\\\"}\\r\\n            checkBoxHandler={checkBoxHandlerCallback}\\r\\n            onChangeTitleHandler={onChangeTitleHandlerCallback}\\r\\n            onRemoveHandler={onRemoveHandlerCallback}\\r\\n        />\\r\\n    </>\\r\\n}\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"TaskBaseExample\":{\"startLoc\":{\"col\":31,\"line\":15},\"endLoc\":{\"col\":1,\"line\":32},\"startBody\":{\"col\":31,\"line\":15},\"endBody\":{\"col\":1,\"line\":32}}};\n    \nimport React from \"react\";\r\nimport {action} from \"@storybook/addon-actions\";\r\nimport {Task} from \"../Todolist\";\r\n\r\n\r\nexport default {\r\n    title: \"Task Component\",\r\n    component: Task\r\n}\r\n\r\nconst checkBoxHandlerCallback = action(\"Status changed\")\r\nconst onChangeTitleHandlerCallback = action(\"Title changed\")\r\nconst onRemoveHandlerCallback = action(\"Task removed\")\r\n\r\nexport const TaskBaseExample = () => {\r\n    return <>\r\n        <Task\r\n            task={{id: \"1\", isDone: true, title: \"CSS\"}}\r\n            todoListId={\"todoListId1\"}\r\n            checkBoxHandler={checkBoxHandlerCallback}\r\n            onChangeTitleHandler={onChangeTitleHandlerCallback}\r\n            onRemoveHandler={onRemoveHandlerCallback}\r\n        />\r\n        <Task\r\n            task={{id: \"2\", isDone: false, title: \"JS\"}}\r\n            todoListId={\"todoListId2\"}\r\n            checkBoxHandler={checkBoxHandlerCallback}\r\n            onChangeTitleHandler={onChangeTitleHandlerCallback}\r\n            onRemoveHandler={onRemoveHandlerCallback}\r\n        />\r\n    </>\r\n};\n\n\nTaskBaseExample.parameters = { storySource: { source: \"() => {\\r\\n    return <>\\r\\n        <Task\\r\\n            task={{id: \\\"1\\\", isDone: true, title: \\\"CSS\\\"}}\\r\\n            todoListId={\\\"todoListId1\\\"}\\r\\n            checkBoxHandler={checkBoxHandlerCallback}\\r\\n            onChangeTitleHandler={onChangeTitleHandlerCallback}\\r\\n            onRemoveHandler={onRemoveHandlerCallback}\\r\\n        />\\r\\n        <Task\\r\\n            task={{id: \\\"2\\\", isDone: false, title: \\\"JS\\\"}}\\r\\n            todoListId={\\\"todoListId2\\\"}\\r\\n            checkBoxHandler={checkBoxHandlerCallback}\\r\\n            onChangeTitleHandler={onChangeTitleHandlerCallback}\\r\\n            onRemoveHandler={onRemoveHandlerCallback}\\r\\n        />\\r\\n    </>\\r\\n}\" }, ...TaskBaseExample.parameters };"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;AAaA;AAEA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AAHA;AAMA;AAXA;AAeA;AACA;AA7BA;AA8BA;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAcA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AANA;AAAA;AAFA;AAYA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AACA;AACA;AAHA;AAAA;AAXA;AAlBA;AAqCA;AAWA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;AACA;AAFA;AAGA;AAAA;AAAA;AAAA;AAAA;AAPA;AAYA;;;;;;;;;;;;ACrIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AA2BA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AA7BA;AAgCA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;AC/EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;;AAEA;AACA;AACA;AAFA;AAMA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;AAGA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AARA;AAgBA;AAGA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}